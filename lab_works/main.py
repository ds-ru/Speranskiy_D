import time
import requests
from telebot.async_telebot import AsyncTeleBot
from telebot import types
import json
from datetime import datetime
import os
import asyncio

with open('keys.json', 'r', encoding='utf-8') as keys:
    key = json.load(keys)
    API_TOKEN = key['API_TOKEN']
    ADMIN_ID = key['ADMIN_ID']

bot = AsyncTeleBot(API_TOKEN)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
requests_file = 'requests.json'

RATE_LIMIT = 50  # –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
BLOCK_TIME = 60 * 15  # –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (15 –º–∏–Ω—É—Ç)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
request_counts = {}  # {'user_id': [count, timestamp]}
blacklist = {}  # {'user_id': unblock_time}
inactive_users = {}


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
async def check_rate_limit(user_id):
    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
    if user_id in blacklist:
        if current_time < blacklist[user_id]:
            return False
        else:
            # –£–¥–∞–ª—è–µ–º –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
            del blacklist[user_id]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    if user_id in request_counts:
        count, first_request_time = request_counts[user_id]

        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ BLOCK_TIME, –æ–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
        if current_time - first_request_time > BLOCK_TIME:
            request_counts[user_id] = [1, current_time]
        elif count < RATE_LIMIT:
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –ª–∏–º–∏—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω
            request_counts[user_id][0] += 1
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
            blacklist[user_id] = current_time + BLOCK_TIME
            del request_counts[user_id]
            return False
    else:
        # –ù–∞—á–∏–Ω–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        request_counts[user_id] = [1, current_time]

    return True


# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –∑–∞—è–≤–∫–∞–º–∏
if os.path.exists(requests_file):
    with open(requests_file, 'r', encoding='utf-8') as file:
        requests = json.load(file)
else:
    requests = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –≤ —Ñ–∞–π–ª
def save_requests():
    with open(requests_file, 'w', encoding='utf-8') as file:
        json.dump(requests, file, indent=4, ensure_ascii=False)


async def notify_admin(request_number, user_id, username, message, timestamp):
    notification_text = (
        f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
        f"–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {request_number}\n"
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n"
        f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
        f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {timestamp}"
    )
    await bot.send_message(ADMIN_ID, notification_text)


async def notify_admin_start(user_id, username, message, timestamp):
    notification_text = (
        f"–ö—Ç–æ-—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±–æ—Ç–æ–º\n"
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n"
        f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
        f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {timestamp}"
    )
    await bot.send_message(ADMIN_ID, notification_text)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø—É—Å—Ç—è —á–∞—Å
async def send_reminder(user_id):
    if user_id in inactive_users:
        current_time = time.time()
        start_time = inactive_users[user_id]
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–µ–ª –ª–∏ —á–∞—Å —Å –º–æ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ä—Ç–∞
        if current_time - start_time >= 3600:  # 1 —á–∞—Å
            await bot.send_message(user_id,
                                   "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫? ü§î\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –º—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!")
            del inactive_users[user_id]  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è


# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
async def main(message):
    if await check_rate_limit(message.from_user.id):
        if message.from_user.id != ADMIN_ID:
            user_id = message.from_user.id
            username = message.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–ü—Ä–∞–π—Å-–ª–∏—Å—Ç")
            button2 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
            button3 = types.KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É")
            button4 = types.KeyboardButton("–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É")
            markup.add(button1, button2, button3, button4)

            welcome_msg = """–ü—Ä–∏–≤–µ—Ç!üëã

    –ë–æ—Ç *SpiritLabs* –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–±–æ—Ä–∞ –∑–∞—è–≤–æ–∫ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∏ –∏–Ω—ã—Ö —Ä–∞–±–æ—Ç. 

    –° *–ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º* –∏ *–ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —É—Å–ª—É–≥* –í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.

    –î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É *—Ç–µ–∫—Å—Ç–æ–≤–æ–µ* –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏. 

    –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ *–¥–æ–ø–æ–ª–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ*, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ ‚Äì –æ–Ω–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –∑–∞—è–≤–∫–µ.

    ‚ùóÔ∏è*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ*‚ùóÔ∏è

    1. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –í–∞—à–µ *–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è* Telegram –¥–ª—è —Å–≤—è–∑–∏.

    2. –ë–æ—Ç *–Ω–µ* –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–∞–π–ª—ã, –∏—Ö –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏, –∫–æ–≥–¥–∞ –º—ã —Å –í–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.

    3. –ü—Ä–∏ –¥–æ–ø—É—â–µ–Ω–∏–∏ *–æ—à–∏–±–∫–∏* –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞—è–≤–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∑–∞–Ω–æ–≤–æ."""

            await bot.send_message(message.chat.id, welcome_msg, reply_markup=markup, parse_mode='Markdown')

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
            asyncio.create_task(send_reminder(user_id))

            await notify_admin_start(user_id, "@" + username, message.text, timestamp)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–ü—Ä–∞–π—Å-–ª–∏—Å—Ç")
            button2 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
            button4 = types.KeyboardButton("/view_requests")
            markup.add(button1, button2, button4)

            welcome_msg = """–†–∞–±–æ—Ç–∞—é –≤ –ø–æ—Ç–µ –ª–∏—Ü–∞, –°—ç—Ä!"""

            await bot.send_message(message.chat.id, welcome_msg, reply_markup=markup)
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
@bot.message_handler(commands=['view_requests'])
async def view_requests(message):
    if message.from_user.id == ADMIN_ID:
        if requests:
            requests_list = "\n".join(
                [
                    f"–ó–∞—è–≤–∫–∞ #{req['request_number']} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {req['user_id']} (@{req['username']}):\n {', '.join(req['messages'])}\n–î–∞—Ç–∞: {req['timestamp']}\n–°—Ç–∞—Ç—É—Å: {req['active']}"
                    for req in requests.values()]
            )
            await bot.reply_to(message, f"–í—Å–µ –∑–∞—è–≤–∫–∏:\n{requests_list}")
        else:
            await bot.reply_to(message, "–ó–∞—è–≤–æ–∫ –Ω–µ—Ç.")
    else:
        await bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫.")


@bot.message_handler(func=lambda message: message.text == "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç")
async def prices(message):
    if await check_rate_limit(message.from_user.id):
        price_list = """
            –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ\! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:
            \n> 1\. *–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python*\n>    \- *–ë–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∏ –ø—Ä–æ—Å—Ç—ã–µ —Å–∫—Ä–∏–ø—Ç—ã* ‚Äî –æ—Ç 500 —Ä—É–±\.\n>    \- *–ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö \(Pandas\)* ‚Äî –æ—Ç 800 —Ä—É–±\.\n>    \- *–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–µ–±\-API \(Requests\)* ‚Äî –æ—Ç 1\,000 —Ä—É–±\.\n>    \- *–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö \(Matplotlib\, Seaborn\)* ‚Äî –æ—Ç 800 —Ä—É–±\.\n>    \- *–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Excel \(OpenPyXl\)* ‚Äî –æ—Ç 1\,000 —Ä—É–±\.\n>    \- *–†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö \(SQLite3\, MySQL\-connector\)* ‚Äî –æ—Ç 1\,200 —Ä—É–±\.
            \n> 2\. *SQL –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö*\n>    \- *–ü—Ä–æ—Å—Ç—ã–µ SQL\-–∑–∞–ø—Ä–æ—Å—ã* ‚Äî –æ—Ç 500 —Ä—É–±\.\n>    \- *–°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å JOIN –∏ –ø–æ–¥–∑–∞–ø—Ä–æ—Å–∞–º–∏* ‚Äî –æ—Ç 1\,000 —Ä—É–±\.\n>    \- *–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö \(GROUP BY\, HAVING\)* ‚Äî –æ—Ç 800 —Ä—É–±\.\n>    \- *–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã–º–∏ \(INSERT\, UPDATE\, DELETE\)* ‚Äî –æ—Ç 600 —Ä—É–±\.\n>    \- *–û–∫–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ \(ROW\_NUMBER\, RANK\, LEAD\, LAG\)* ‚Äî –æ—Ç 1\,500 —Ä—É–±\.\n>    \- *–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö* ‚Äî –æ—Ç 2\,000 —Ä—É–±\.
            \n> 3\. *–†–∞–±–æ—Ç–∞ –≤ Excel*\n>    \- *–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ñ–æ—Ä–º—É–ª—ã \(–°–£–ú–ú\, –°–£–ú–ú–ï–°–õ–ò\, –°–ß–Å–¢–ï–°–õ–ò\)* ‚Äî –æ—Ç 300 —Ä—É–±\.\n>    \- *–§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö \(–í–ü–†\, –ì–ü–†\, –ü–†–û–°–ú–û–¢–†–•\)* ‚Äî –æ—Ç 500 —Ä—É–±\.\n>    \- *–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü* ‚Äî –æ—Ç 800 —Ä—É–±\.
            \n> 4\. *–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã*\n>    \- *–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ Python\, SQL –∏ Excel* ‚Äî –æ—Ç 3\,000 —Ä—É–±\.\n>    \- *–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–¥ –∫–ª—é—á* ‚Äî –æ—Ç 5\,000 —Ä—É–±\.
            \n> 5\. *–ù–∞–ø–∏—Å–∞–Ω–∏–µ Telegram –±–æ—Ç–æ–≤* ‚Äî –æ—Ç 3\,000 —Ä—É–±\.
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞\, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏\, –∏ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è\.
            """
        await bot.send_message(message.chat.id, price_list, parse_mode='MarkdownV2')
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
async def send_description(message):
    if await check_rate_limit(message.from_user.id):
        description = """
        –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:

        <b>1. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python</b>
        <b>–û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</b> –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –Ω–∞ Python, –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–æ —Å–ª–æ–∂–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
        <b>–í–∫–ª—é—á–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏:</b>
            - <b>Pandas</b>: –∞–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Ä–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö.
            - <b>Requests</b>: –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–µ–±-API –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Ç–∏.
            - <b>Matplotlib & Seaborn</b>: –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∏–∞–≥—Ä–∞–º–º.
            - <b>NumPy</b>: —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –∏ –º–∞—Ç—Ä–∏—Ü–∞–º–∏, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.
            - <b>OpenPyXl</b>: —Ä–∞–±–æ—Ç–∞ —Å Excel, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤.
            - <b>SQLite3 & MySQL-–°onnector</b>: —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏.

        <b>2. SQL –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</b>
        <b>–û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</b> –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤.
        <b>–†–∞–±–æ—Ç–∞—é —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –°–£–ë–î:</b>
            - <b>MySQL</b>: —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
            - <b>PgSQL (PostgreSQL)</b>: –º–æ—â–Ω–∞—è –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
            - <b>Oracle</b>: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω—ã—Ö –∑–∞–¥–∞—á.
            - <b>MS SQL Server</b>: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –≤ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö –∏ –¥–ª—è –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑–∞.

        <b>–ò—Å–ø–æ–ª—å–∑—É—é –∫–ª—é—á–µ–≤—ã–µ SQL-–æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
            - <b>–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö</b>: —Å –ø–æ–º–æ—â—å—é GROUP BY –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –ø–æ –≥—Ä—É–ø–ø–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ HAVING –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≥—Ä—É–ø–ø –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏.
            - <b>–ê–≥—Ä–µ–≥–∏—Ä—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>: —Ç–∞–∫–∏–µ –∫–∞–∫ MIN, MAX, SUM, COUNT –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
            - <b>JOIN</b>: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
            - <b>INSERT, UPDATE, DELETE</b>: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–º–∏ –≤ –±–∞–∑–µ.
            - <b>–ü–æ–¥–∑–∞–ø—Ä–æ—Å—ã –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã(CTE)</b>: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
            - <b>–û–∫–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>: —Ç–∞–∫–∏–µ –∫–∞–∫ ROW_NUMBER, RANK, LEAD, LAG –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å —É—á–µ—Ç–æ–º —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç—Ä–æ–∫.

        <b>–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö:</b>
        –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –±–∏–∑–Ω–µ—Å-—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏. –í–∫–ª—é—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–ª—é—á–µ–π –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö.

        <b>3. –†–∞–±–æ—Ç–∞ –≤ Excel</b>
        <b>–û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</b> –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Excel, —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –∏ —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü, –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
        <b>–í–∫–ª—é—á–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:</b>
            - <b>–í–ü–† (VLOOKUP) –∏ –ì–ü–† (HLOOKUP)</b>: —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.
            - <b>–ü–†–û–°–ú–û–¢–†–• (XLOOKUP)</b>: —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –í–ü–†, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è –ø–æ–∏—Å–∫ –≤ –æ–±–æ–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö.
            - <b>–°–£–ú–ú (SUM) –∏ –°–£–ú–ú–ï–°–õ–ò (SUMIF)</b>: –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—É–º–º —Å —É—á–µ—Ç–æ–º —É—Å–ª–æ–≤–∏–π.
            - <b>–°–ß–Å–¢–ï–°–õ–ò (COUNTIF) –∏ –°–ß–Å–¢–ï–°–õ–ò–ú–ù (COUNTIFS)</b>: –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–Ω–∞—á–µ–Ω–∏–π, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
            - <b>–°–≤–æ–¥–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã</b>: —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –∏—Ö –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏.
        """

        await bot.send_message(message.chat.id, description, parse_mode='HTML')
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
@bot.message_handler(
    func=lambda message: message.text not in ["–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", "–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É", "–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É", "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç"])
async def handle_request(message):
    if await check_rate_limit(message.from_user.id):
        if message.from_user.id != ADMIN_ID:
            user_id = message.from_user.id
            username = message.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            active_request = None
            for req_id, req in requests.items():
                if req['user_id'] == user_id and req['active']:
                    active_request = req
                    break

            if active_request is None:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
                request_number = str(max(map(int, requests.keys()), default=0) + 1)
                requests[request_number] = {
                    "request_number": request_number,
                    "user_id": user_id,
                    "username": username,
                    "message": message.text,
                    "timestamp": timestamp,
                    "messages": [message.text],
                    "active": True
                }
                await notify_admin(request_number, user_id, "@" + username, message.text, timestamp)
                await bot.send_message(user_id,
                                       f"""–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!\n–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –∑–∞—è–≤–∫–µ.\n–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {request_number}""")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞—è–≤–∫—É
                active_request['messages'].append(message.text)
                active_request['timestamp'] = timestamp
                await bot.send_message(user_id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫ —Ç–µ–∫—É—â–µ–π –∑–∞—è–≤–∫–µ.")

            save_requests()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫–∏ –≤ —Ñ–∞–π–ª
        else:
            await bot.reply_to(message, "–†–∞–±–æ—Ç–∞—é –≤ –ø–æ—Ç–µ –ª–∏—Ü–∞, –°—ç—Ä!")
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


@bot.message_handler(func=lambda message: message.text == "–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É")
async def open_request(message):
    if check_rate_limit(message.from_user.id):
        await bot.reply_to(message, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞—è–≤–∫–∏
@bot.message_handler(func=lambda message: message.text == "–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É")
async def close_request(message):
    if await check_rate_limit(message.from_user.id):
        user_id = message.from_user.id
        for req in requests.values():
            if req['user_id'] == user_id and req['active']:
                req['active'] = False
                await bot.reply_to(message, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞.")
                save_requests()
                break
        else:
            await bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")
    else:
        await bot.reply_to(message, "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


if __name__ == '__main__':
    asyncio.run(bot.polling())
